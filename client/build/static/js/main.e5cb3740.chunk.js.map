{"version":3,"sources":["routes/routes.js","constants/constant.js","components/common/SuspenseLoader.jsx","context/DataProvider.jsx","App.js","reportWebVitals.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","routes","react__WEBPACK_IMPORTED_MODULE_0__","Main","lazy","Promise","all","e","then","bind","Emails","main","path","element","emails","invalid","view","emptyProfilePic","VIEWS","EMPTY_TABS","inbox","starred","sent","drafts","heading","subHeading","bin","react__WEBPACK_IMPORTED_MODULE_0___default","n","_mui_material__WEBPACK_IMPORTED_MODULE_1__","_mui_material__WEBPACK_IMPORTED_MODULE_2__","_mui_material__WEBPACK_IMPORTED_MODULE_3__","SuspenseLoader","React","createElement","Box","CircularProgress","Typography","DataContext","createContext","DataProvider","_ref","children","setView","useState","Provider","value","ErrorComponent","router","createBrowserRouter","createRoutesFromElements","Route","Navigate","to","concat","errorElement","App","Suspense","fallback","RouterProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e5cb3740.chunk.js","sourcesContent":["import { lazy } from 'react';\n\nconst Main = lazy(() => import('../pages/Main'));\nconst Emails = lazy(() => import('../components/Emails'));\nconst ViewEmail = lazy(() => import('../components/ViewEmail'));\n\nconst routes = {\n    main: {\n        path: '/',\n        element: Main\n    },\n    emails: {\n        path: '/emails',\n        element: Emails\n    },\n    invalid: {\n        path: '/*',\n        element: Emails\n    },\n    view: {\n        path: '/view',\n        element: ViewEmail\n    }\n}\n\nexport { routes };","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png'; // Ensure this line is present\n\nexport const VIEWS = {\n    inbox: 'inbox',\n    starred: 'starred',\n    sent: 'sent',\n    drafts: 'drafts',\n};\n\nexport const EMPTY_TABS = {\n    inbox: {\n        heading: 'Your inbox is empty',\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\n    },\n    drafts: {\n        heading: \"You don't have any saved drafts.\",\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\n    },\n    starred: {\n        heading: 'No starred messages',\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\n    },\n    sent: {\n        heading: 'No sent messages!',\n        subHeading: 'Send one now!'\n    },\n    bin: {\n        heading: 'No conversations in Bin.',\n        subHeading: ''\n    },\n};\n","import React from 'react';\nimport { Typography, CircularProgress, Box } from \"@mui/material\";\n\nconst SuspenseLoader = () => {\n\n    return (\n        <Box>\n            <CircularProgress />\n            <Typography>Loading...</Typography>\n        </Box>\n    )\n}\nexport default SuspenseLoader;","import React, { createContext, useState } from 'react';\nimport { VIEWS } from '../constants/constant';\n\nexport const DataContext = createContext(null);\n\nconst DataProvider = ({ children }) => {\n    const [view, setView] = useState(VIEWS.inbox);\n\n    return (\n        <DataContext.Provider value={{\n            view,\n            setView\n        }}>\n            {children}\n        </DataContext.Provider>\n    );\n}\n\nexport default DataProvider;\n","import React from 'react';\nimport { Suspense, lazy } from 'react';\nimport { Navigate, Route, createBrowserRouter, createRoutesFromElements, RouterProvider } from 'react-router-dom';\nimport { routes } from \"./routes/routes\";\nimport SuspenseLoader from './components/common/SuspenseLoader';\nimport DataProvider from './context/DataProvider';\n\nconst ErrorComponent = lazy(() => import('./components/common/ErrorComponent'));\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route>\n      <Route path={routes.main.path} element={<Navigate to={`${routes.emails.path}/inbox`} />} />\n      <Route path={routes.main.path} element={<routes.main.element />} >\n        <Route path={`${routes.emails.path}/:type`} element={<routes.emails.element />} errorElement={<ErrorComponent />} />\n        <Route path={routes.view.path} element={<routes.view.element />} errorElement={<ErrorComponent />} />\n      </Route>\n\n      <Route path={routes.invalid.path} element={<Navigate to={`${routes.emails.path}/inbox`} />} />\n    </Route>\n  )\n)\n\nfunction App() {\n  return (\n    <Suspense fallback={<SuspenseLoader />}>\n      <DataProvider>\n        <RouterProvider router={router} />\n      </DataProvider>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}